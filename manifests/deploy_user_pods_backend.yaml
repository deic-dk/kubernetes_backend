apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-pods-backend
  namespace: sciencedata

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-sciencedata
  namespace: sciencedata
rules:
  - apiGroups: [""]
    resources:
      - pods
      - services
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - delete
      - create
      - watch
  - apiGroups: [""]
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - list
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: user-pods-modify-sciencedata
  namespace: sciencedata
subjects:
  - kind: ServiceAccount
    name: user-pods-backend
roleRef:
  kind: Role
  name: modify-sciencedata
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: provision-nfs
rules:
  - apiGroups: [""]
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - delete
      - create
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: user-pods-provision-nfs
subjects:
  - kind: ServiceAccount
    name: user-pods-backend
    namespace: sciencedata
roleRef:
  kind: ClusterRole
  name: provision-nfs
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Pod
metadata:
  name: user-pods-backend
  namespace: sciencedata
  labels:
    app: user-pods-backend
spec:
  serviceAccountName: user-pods-backend
  imagePullSecrets:
    - name: docker-registry-auth
  containers:
    - name: user-pods-backend
      image: dockerregistry.clement.tel/user_pods_backend
      env:
        - name: "BACKEND_LOCALREGISTRYURL"
          value: "dockerregistry.clement.tel"
        - name: "BACKEND_LOCALREGISTRYSECRET"
          value: "docker-registry-auth"
        - name: "BACKEND_INGRESSDOMAIN"
          value: "pods.clement.tel"
        - name: "BACKEND_NAMESPACE"
          value: "sciencedata"
      ports:
        - containerPort: 80
          protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/whitelist-source-range: 127.0.0.0/8,10.0.0.0/8
  name: user-pods-backend
  namespace: sciencedata
spec:
  rules:
    - host: kube.sciencedata.dk
      http:
        paths:
          - backend:
              service:
                name: user-pods-backend-http
                port:
                  number: 80
            path: /
            pathType: Prefix

---
apiVersion: v1
kind: Service
metadata:
  name: user-pods-backend-http
  namespace: sciencedata
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: user-pods-backend
